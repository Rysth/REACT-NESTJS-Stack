services:
  client:
    build: ./client
    container_name: react-client
    ports:
      - "5173:5173"
    volumes:
      - ./client:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - VITE_API_URL=${VITE_API_URL}
    depends_on:
      - server
    networks:
      - app_name_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.client.rule=Host(`frontend.example.com`)"
      - "traefik.http.routers.client.tls=true"
      - "traefik.http.routers.client.tls.certresolver=letsencrypt"
      - "traefik.http.services.client.loadbalancer.server.port=5173"

  server:
    build: ./server
    container_name: rails-api
    ports:
      - "${PORT}:${PORT}"
    volumes:
      - ./server:/rails
      - ./server/tmp:/rails/tmp
      - rails_bundle:/usr/local/bundle
    environment:
      - FRONTEND_URL=${FRONTEND_URL}
      - RAILS_ENV=${RAILS_ENV}
      - "DATABASE_URL=postgres://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:5432/${DB_NAME}"
      - REDIS_URL=${REDIS_URL}
      - CLOUDFLARE_ENDPOINT=${CLOUDFLARE_ENDPOINT}
      - CLOUDFLARE_ACCESS_KEY_ID=${CLOUDFLARE_ACCESS_KEY_ID}
      - CLOUDFLARE_SECRET_ACCESS_KEY=${CLOUDFLARE_SECRET_ACCESS_KEY}
      - CLOUDFLARE_BUCKET_NAME=${CLOUDFLARE_BUCKET_NAME}
      - "SMTP_HOST=${SMTP_HOST}"
      - "SMTP_PORT=${SMTP_PORT}"
      - "SMTP_USER=${SMTP_USER}"
      - "SMTP_PASSWORD=${SMTP_PASSWORD}"
      - "SECRET_KEY_BASE=${SECRET_KEY_BASE}"
    command: bash -c "bundle install && rm -f tmp/pids/server.pid && bundle exec rails db:migrate && bundle exec rails s -p ${PORT} -b '0.0.0.0'"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app_name_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.server.rule=Host(`api-frontend.example.com`)"
      - "traefik.http.routers.server.tls=true"
      - "traefik.http.routers.server.tls.certresolver=letsencrypt"
      - "traefik.http.services.server.loadbalancer.server.port=${PORT}"

  postgres:
    image: postgres:16-alpine
    container_name: postgres-db
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - app_name_network

  redis:
    image: redis:7-alpine
    container_name: redis-db
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app_name_network

  sidekiq-worker:
    build: ./server
    container_name: sidekiq-worker
    volumes:
      - ./server:/rails
      - ./server/tmp:/rails/tmp
      - rails_bundle:/usr/local/bundle
    environment:
      - FRONTEND_URL=${FRONTEND_URL}
      - RAILS_ENV=${RAILS_ENV}
      - "DATABASE_URL=postgres://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:5432/${DB_NAME}"
      - REDIS_URL=${REDIS_URL}
      - CLOUDFLARE_ENDPOINT=${CLOUDFLARE_ENDPOINT}
      - CLOUDFLARE_ACCESS_KEY_ID=${CLOUDFLARE_ACCESS_KEY_ID}
      - CLOUDFLARE_SECRET_ACCESS_KEY=${CLOUDFLARE_SECRET_ACCESS_KEY}
      - CLOUDFLARE_BUCKET_NAME=${CLOUDFLARE_BUCKET_NAME}
      - "SMTP_HOST=${SMTP_HOST}"
      - "SMTP_PORT=${SMTP_PORT}"
      - "SMTP_USER=${SMTP_USER}"
      - "SMTP_PASSWORD=${SMTP_PASSWORD}"
      - "SECRET_KEY_BASE=${SECRET_KEY_BASE}"
    command: bash -c "bundle install && bundle exec sidekiq"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - app_name_network

volumes:
  postgres_data:
  rails_bundle:
  redis_data:
networks:
  app_name_network:
    driver: bridge
